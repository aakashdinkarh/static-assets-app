{"version":3,"file":"static/js/698.9eda5aa1.chunk.js","mappings":"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","sources":["webpack://static-assets-app/./src/components/ImageUploader/imageUploader.module.css?e62c","webpack://static-assets-app/./src/common/Input/input.module.css?2e14","common/Input/Input.tsx","common/Form.tsx","utils/form.validationMessage.ts","components/ImageUploader/ImageUploader.tsx","webpack://static-assets-app/./src/pages/uploadImage/page.module.css?4fc3","pages/uploadImage/page.tsx","utils/commonHeaders.util.ts","api/githubContent.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"imageUploader_form__1KRB0\",\"formGroup\":\"imageUploader_formGroup__OFre5\",\"label\":\"imageUploader_label__xKTyW\",\"input\":\"imageUploader_input__gjq8Y\",\"button\":\"imageUploader_button__2l2RS\",\"fileInputWrapper\":\"imageUploader_fileInputWrapper__yNFy9\",\"fileInputContainer\":\"imageUploader_fileInputContainer__oGP90\",\"previewContainer\":\"imageUploader_previewContainer__jwofY\",\"previewImage\":\"imageUploader_previewImage__tYdAv\",\"previewPlaceholder\":\"imageUploader_previewPlaceholder__uHrAK\"};","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"input_label__xuGk1\",\"input\":\"input_input__NwTQL\",\"error\":\"input_error__Ivs9h\",\"inputGroup\":\"input_inputGroup__4feuD\"};","import type { InputHTMLAttributes } from 'react';\nimport styles from './input.module.css';\nimport { mergeClasses } from 'utils/mergeClasses';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  label: string;\n  name: string;\n  errorMessage?: string;\n  labelClassName?: string;\n  inputGroupClassName?: string;\n  errorClassName?: string;\n}\n\nexport const Input = ({\n  label,\n  errorMessage,\n  name,\n  labelClassName,\n  inputGroupClassName,\n  errorClassName,\n  className,\n  required = true,\n  ...props\n}: InputProps) => {\n  return (\n    <div className={mergeClasses(styles.inputGroup, inputGroupClassName)}>\n      <label htmlFor={name} className={mergeClasses(styles.label, labelClassName)}>\n        {label}\n      </label>\n      <input\n        type=\"text\"\n        id={name}\n        name={name}\n        className={mergeClasses(styles.input, className)}\n        required={required}\n        {...props}\n      />\n      {errorMessage && (\n        <div className={mergeClasses(styles.error, errorClassName)}>{errorMessage}</div>\n      )}\n    </div>\n  );\n};\n","import { getValidationMessage, isInvalidField } from 'utils/form.validationMessage';\n\ninterface FormProps\n  extends Omit<React.FormHTMLAttributes<HTMLFormElement>, 'onSubmit' | 'onError'> {\n  children: React.ReactNode;\n  validateAll?: boolean;\n  onSubmit: (data: Record<string, FormDataEntryValue>, form: HTMLFormElement) => void;\n  onError?: (errors: Record<string, string>) => void;\n}\n\nexport const Form = ({ children, validateAll = false, onSubmit, onError, ...props }: FormProps) => {\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const form = e.target as HTMLFormElement;\n\n    if (validateAll) {\n      const fields = form.elements;\n      const errors: Record<string, string> = {};\n      Array.from(fields).forEach(field => {\n        if (isInvalidField(field)) {\n          errors[field.name] = getValidationMessage(field);\n        }\n      });\n\n      if (Object.keys(errors).length > 0) {\n        onError?.(errors);\n        return;\n      }\n    }\n\n    const formData = new FormData(form);\n    const data = Object.fromEntries(formData);\n\n    onSubmit(data, form);\n  };\n\n  return (\n    <form noValidate={validateAll} onSubmit={handleSubmit} {...props}>\n      {children}\n    </form>\n  );\n};\n","export const isInvalidField = (\n  field: Element\n): field is HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement => {\n  if (\n    field instanceof HTMLInputElement ||\n    field instanceof HTMLTextAreaElement ||\n    field instanceof HTMLSelectElement\n  ) {\n    return !field.checkValidity();\n  }\n\n  return false;\n};\n\nexport const getValidationMessage = (\n  field: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\n): string => {\n  const { validity } = field;\n  const label = field.labels?.[0]?.textContent?.trim();\n  if (label) {\n    if (validity.valueMissing) return `${label} is required.`;\n    if (validity.typeMismatch) return `Please enter ${label} in a valid format.`;\n    if (validity.patternMismatch) return `${label} does not match the expected pattern.`;\n    if (validity.tooShort && 'minLength' in field)\n      return `${label} must be at least ${field.minLength} characters.`;\n    if (validity.tooLong && 'maxLength' in field)\n      return `${label} must be at most ${field.maxLength} characters.`;\n    if (validity.rangeUnderflow && 'min' in field) return `${label} must be at least ${field.min}.`;\n    if (validity.rangeOverflow && 'max' in field) return `${label} must be at most ${field.max}.`;\n    if (validity.stepMismatch) return `${label} must be a valid step value.`;\n    if (validity.badInput) return `${label} must be a number.`;\n    if (validity.customError) return `${label} has a custom error.`;\n  }\n\n  if (validity.valueMissing) return 'This field is required.';\n  if (validity.typeMismatch) return 'Please enter a valid format.';\n  if (validity.patternMismatch) return 'Input does not match the expected pattern.';\n  if (validity.tooShort && 'minLength' in field)\n    return `Minimum length is ${field.minLength} characters.`;\n  if (validity.tooLong && 'maxLength' in field)\n    return `Maximum length is ${field.maxLength} characters.`;\n  if (validity.rangeUnderflow && 'min' in field) return `Value should be at least ${field.min}.`;\n  if (validity.rangeOverflow && 'max' in field) return `Value should be at most ${field.max}.`;\n  if (validity.stepMismatch) return 'Please enter a valid step value.';\n  if (validity.badInput) return 'Please enter a number.';\n  if (validity.customError) return field.validationMessage;\n\n  return '';\n};\n","import { useState, useEffect } from 'react';\nimport { Image } from 'common/Image';\nimport type { GithubUploadResponse } from 'types/github';\nimport { uploadGithubContent } from 'api/githubContent';\nimport styles from './imageUploader.module.css';\nimport { PrimaryButton } from 'common/Button';\nimport { Input } from 'common/Input';\nimport { Form } from 'common/Form';\n\ninterface ImageUploaderProps {\n  onSuccess?: (response: GithubUploadResponse) => void;\n  onError?: (error: string) => void;\n}\n\nconst FORM_FIELDS = {\n  file: 'file',\n  directory: 'directory',\n  filename: 'filename',\n} as const;\n\nconst changeFilenameInput = (form: HTMLFormElement | null, fileName?: string) => {\n  if (!form) return;\n\n  // @ts-expect-error - form elements are not typed\n  const filenameInput = form.elements[FORM_FIELDS.filename] as HTMLInputElement;\n  if (filenameInput) {\n    filenameInput.value = fileName || '';\n  }\n};\n\nexport function ImageUploader({ onSuccess, onError }: ImageUploaderProps) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [previewUrl, setPreviewUrl] = useState<string | null>(null);\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  useEffect(() => {\n    // Cleanup previous preview URL when file changes\n    return () => {\n      if (previewUrl) {\n        URL.revokeObjectURL(previewUrl);\n      }\n    };\n  }, [previewUrl]);\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const selectedFile = e.target.files?.[0];\n\n    try {\n      changeFilenameInput(e.target.form, selectedFile?.name);\n    } catch {}\n\n    if (selectedFile) {\n      // Create preview URL for the selected file\n      const url = URL.createObjectURL(selectedFile);\n      setPreviewUrl(url);\n    } else {\n      setPreviewUrl(null);\n    }\n  };\n\n  const handleSubmit = async (data: Record<string, FormDataEntryValue>, form: HTMLFormElement) => {\n    const file = data[FORM_FIELDS.file] as File;\n    const directory = data[FORM_FIELDS.directory] as string;\n    const filename = data[FORM_FIELDS.filename] as string;\n\n    if (!file || !directory || !filename) {\n      onError?.('Please fill in all fields');\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      const result: GithubUploadResponse = await uploadGithubContent({\n        file,\n        directory,\n        filename,\n        commitMessage: `Upload ${filename}`,\n      });\n      onSuccess?.(result);\n      form.reset();\n      setPreviewUrl(null);\n    } catch (error) {\n      onError?.(error instanceof Error ? error.message : 'Failed to upload image');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} validateAll onError={setErrors} className={styles.form}>\n      <div className={styles.fileInputWrapper}>\n        <div className={styles.fileInputContainer}>\n          <Input\n            label=\"Image File\"\n            name={FORM_FIELDS.file}\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={handleFileChange}\n            errorMessage={errors[FORM_FIELDS.file]}\n            required\n          />\n        </div>\n        <div className={styles.previewContainer}>\n          {previewUrl ? (\n            <Image\n              src={previewUrl}\n              alt=\"Preview\"\n              className={styles.previewImage}\n              width={300}\n              height={200}\n              style={{ objectFit: 'contain' }}\n            />\n          ) : (\n            <span className={styles.previewPlaceholder}>Image preview will appear here</span>\n          )}\n        </div>\n      </div>\n\n      <Input\n        label=\"Directory Path\"\n        name={FORM_FIELDS.directory}\n        placeholder=\"e.g., images/blog\"\n        errorMessage={errors[FORM_FIELDS.directory]}\n      />\n\n      <Input\n        label=\"File Name\"\n        name={FORM_FIELDS.filename}\n        placeholder=\"e.g., header-image.jpg\"\n        errorMessage={errors[FORM_FIELDS.filename]}\n      />\n\n      <PrimaryButton type=\"submit\" disabled={isLoading} style={submitButtonStyle}>\n        {isLoading ? 'Uploading...' : 'Upload Image'}\n      </PrimaryButton>\n    </Form>\n  );\n}\n\nconst submitButtonStyle = {\n  justifyContent: 'center',\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"page_title__c2NqO\",\"statusMessage\":\"page_statusMessage__EOma9\",\"success\":\"page_success__9Ysa+\",\"error\":\"page_error__4z8Yk\",\"imageLink\":\"page_imageLink__VR1CN\",\"instructions\":\"page_instructions__v0Iqh\",\"instructionsTitle\":\"page_instructionsTitle__9yBST\",\"instructionsList\":\"page_instructionsList__yDC14\"};","import { useState } from 'react';\nimport { ImageUploader } from 'components/ImageUploader';\nimport type { GithubUploadResponse } from 'types/github';\nimport styles from './page.module.css';\n\nexport function UploadPage() {\n  const [status, setStatus] = useState<{\n    type: 'success' | 'error' | null;\n    message: string;\n    url?: string;\n  }>({\n    type: null,\n    message: '',\n  });\n\n  const handleSuccess = (response: GithubUploadResponse) => {\n    setStatus({\n      type: 'success',\n      message: response.message,\n      url: response.url,\n    });\n  };\n\n  const handleError = (error: string) => {\n    setStatus({\n      type: 'error',\n      message: error,\n    });\n  };\n\n  return (\n    <>\n      <h1 className={styles.title}>Upload Images to GitHub</h1>\n      \n      {status.type && (\n        <div\n          className={`${styles.statusMessage} ${\n            status.type === 'success' ? styles.success : styles.error\n          }`}\n        >\n          <p>{status.message}</p>\n          {status.url && (\n            <a\n              href={status.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className={styles.imageLink}\n            >\n              View uploaded image\n            </a>\n          )}\n        </div>\n      )}\n\n      <ImageUploader\n        onSuccess={handleSuccess}\n        onError={handleError}\n      />\n\n      <div className={styles.instructions}>\n        <h2 className={styles.instructionsTitle}>Instructions:</h2>\n        <ul className={styles.instructionsList}>\n          <li>Select an image file to upload</li>\n          <li>Specify the target directory in the repository (e.g., &ldquo;images/blog&rdquo;)</li>\n          <li>Provide a filename for the image (e.g., &ldquo;header-image.jpg&rdquo;)</li>\n          <li>The image will be committed to your configured GitHub repository</li>\n        </ul>\n      </div>\n    </>\n  );\n} ","import { AUTHORIZATION_COOKIE_NAME, getCookie } from 'utils/cookie.util';\n\nexport const getCommonHeaders = () => {\n  const authorization = getCookie(AUTHORIZATION_COOKIE_NAME) || '';\n\n  return {\n    [AUTHORIZATION_COOKIE_NAME]: authorization,\n  };\n};\n","import {\n  DELETE_GITHUB_CONTENT,\n  GET_GITHUB_CONTENT,\n  UPDATE_GITHUB_CONTENT,\n  UPLOAD_GITHUB_CONTENT,\n} from 'constants/api.constant';\nimport { getCommonHeaders } from 'utils/commonHeaders.util';\nimport { checkError } from 'utils/apiHandlers.util';\n\nexport const getGithubContent = async (path: string) => {\n  const url = `${GET_GITHUB_CONTENT.url}?path=${path}`;\n  const response = await fetch(url);\n\n  await checkError(response);\n  const responseData = await response.json();\n\n  const data = responseData.data.data;\n  const items = Array.isArray(data) ? data : [data];\n\n  return items;\n};\n\nexport const uploadGithubContent = async ({\n  file,\n  directory,\n  filename,\n  commitMessage,\n}: {\n  file: File;\n  directory: string;\n  filename: string;\n  commitMessage: string;\n}) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  formData.append('directory', directory);\n  formData.append('filename', filename);\n  formData.append('commit_message', commitMessage);\n\n  const response = await fetch(UPLOAD_GITHUB_CONTENT.url, {\n    method: UPLOAD_GITHUB_CONTENT.method,\n    headers: getCommonHeaders(),\n    body: formData,\n  });\n\n  await checkError(response);\n  const responseData = await response.json();\n  return responseData.data;\n};\n\nexport const updateGithubContent = async ({\n  path,\n  content,\n  commitMessage,\n  sha,\n}: {\n  path: string;\n  content: string;\n  commitMessage: string;\n  sha: string;\n}) => {\n  const response = await fetch(UPDATE_GITHUB_CONTENT.url, {\n    method: UPDATE_GITHUB_CONTENT.method,\n    headers: getCommonHeaders(),\n    body: JSON.stringify({\n      path,\n      content,\n      commitMessage,\n      sha,\n    }),\n  });\n\n  await checkError(response);\n  const responseData = await response.json();\n  return responseData.data;\n};\n\nexport const deleteGithubContent = async ({\n  path,\n  message,\n  sha,\n}: {\n  path: string;\n  message: string;\n  sha: string;\n}) => {\n  const commitMessage = message || `Delete ${path}`;\n\n  const response = await fetch(DELETE_GITHUB_CONTENT.url, {\n    method: DELETE_GITHUB_CONTENT.method,\n    headers: getCommonHeaders(),\n    body: JSON.stringify({\n      path,\n      commitMessage,\n      sha,\n    }),\n  });\n\n  await checkError(response);\n};\n"],"names":["Input","_ref","label","errorMessage","name","labelClassName","inputGroupClassName","errorClassName","className","required","props","_objectWithoutProperties","_excluded","_jsxs","mergeClasses","styles","children","_jsx","htmlFor","_objectSpread","type","id","Form","validateAll","onSubmit","onError","noValidate","e","preventDefault","form","target","fields","elements","errors","Array","from","forEach","field","HTMLInputElement","HTMLTextAreaElement","HTMLSelectElement","checkValidity","isInvalidField","_field$labels","_field$labels$","_field$labels$$textCo","validity","labels","textContent","trim","valueMissing","concat","typeMismatch","patternMismatch","tooShort","minLength","tooLong","maxLength","rangeUnderflow","min","rangeOverflow","max","stepMismatch","badInput","customError","validationMessage","getValidationMessage","Object","keys","length","formData","FormData","data","fromEntries","FORM_FIELDS","file","directory","filename","changeFilenameInput","fileName","filenameInput","value","ImageUploader","onSuccess","isLoading","setIsLoading","useState","previewUrl","setPreviewUrl","setErrors","useEffect","URL","revokeObjectURL","async","result","uploadGithubContent","commitMessage","reset","error","Error","message","fileInputWrapper","fileInputContainer","accept","onChange","_e$target$files","selectedFile","files","_unused","url","createObjectURL","previewContainer","Image","src","alt","previewImage","width","height","style","objectFit","previewPlaceholder","placeholder","PrimaryButton","disabled","submitButtonStyle","justifyContent","UploadPage","status","setStatus","_Fragment","title","statusMessage","success","href","rel","imageLink","response","instructions","instructionsTitle","instructionsList","getCommonHeaders","authorization","getCookie","AUTHORIZATION_COOKIE_NAME","getGithubContent","GET_GITHUB_CONTENT","path","fetch","checkError","json","isArray","append","UPLOAD_GITHUB_CONTENT","method","headers","body","updateGithubContent","content","sha","_ref2","UPDATE_GITHUB_CONTENT","JSON","stringify","deleteGithubContent","_ref3","DELETE_GITHUB_CONTENT"],"sourceRoot":""}