{"version":3,"file":"static/js/594.ea913a94.chunk.js","mappings":"4JACA,QAAgC,6BAAhC,EAAwE,wBAAxE,EAA4I,8BAA5I,EAA8L,iCAA9L,EAAsP,oCAAtP,EAAgT,mCAAhT,EAAkW,4BAAlW,EAAyY,wBAAzY,EAA0d,2BAA1d,EAAkmB,gCAAlmB,EAA2oB,sBAA3oB,EAAorB,gCAAprB,EAAsuB,+BAAtuB,EAAoxB,4B,aCE7wB,MAAMA,EAAQC,IAAmD,IAAlD,MAAEC,EAAQ,kCAAkCD,EAChE,MAAOE,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,IACtCC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,8BAiB7C,OARAG,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAWC,aAAY,KAC3BH,EAAc,8BACdI,YAAW,IAAMJ,EAAc,+BAA+B,OAC7D,KACH,MAAO,IAAMK,cAAcH,KAC1B,KAGDI,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAqBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,KAChBF,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAsBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,KAChBE,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,KAChBE,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,QAElBF,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAoBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SAAA,mDAOhCC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAoB,YAAWT,EAAWU,SACtDV,KAEHO,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAwBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAcC,SAAC,MAAW,WAASd,MAEtDW,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAwBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAcC,SAAC,MAAW,yCAE7CC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAwBC,UACtCC,EAAAA,EAAAA,KAAA,UACEH,UAAS,GAAAI,OAAKH,EAAsB,KAAAG,OAAIf,EAAaY,EAAsB,IAC3EI,QA3CYC,KACpBhB,GAAc,GACdO,YAAW,KACTU,OAAOC,SAASC,WACf,MAwCKC,SAAUrB,EAAWa,SAEpBb,EAAa,eAAiB,sB","sources":["webpack://static-assets-app/./src/components/RepoListItems/error.module.css?9c19","components/RepoListItems/Error.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"errorTerminal\":\"error_errorTerminal__Y0ws7\",\"scanline\":\"error_scanline__L2xSy\",\"scan\":\"error_scan__Dt25f\",\"terminalHeader\":\"error_terminalHeader__NJoO6\",\"terminalButtonRed\":\"error_terminalButtonRed__m5SlN\",\"terminalButtonYellow\":\"error_terminalButtonYellow__8spcc\",\"terminalButtonGreen\":\"error_terminalButtonGreen__uSrDB\",\"terminalBody\":\"error_terminalBody__8AUW5\",\"asciiArt\":\"error_asciiArt__PDOKf\",\"text-flicker\":\"error_text-flicker__Wgx45\",\"errorGlitch\":\"error_errorGlitch__UCeaN\",\"glitch-anim-1\":\"error_glitch-anim-1__fh1h8\",\"glitch-anim-2\":\"error_glitch-anim-2__q3Tz2\",\"errorMessageTerm\":\"error_errorMessageTerm__zpLdN\",\"prompt\":\"error_prompt__l5X09\",\"errorActionsTerm\":\"error_errorActionsTerm__G-65x\",\"retryButtonTerm\":\"error_retryButtonTerm__6KhOz\",\"retryingTerm\":\"error_retryingTerm__vEtce\"};","import { useState, useEffect } from 'react';\nimport styles from './error.module.css';\n\nexport const Error = ({ error = 'A fatal exception has occurred' }) => {\n  const [isRetrying, setIsRetrying] = useState(false);\n  const [glitchText, setGlitchText] = useState('Oops! Something went wrong');\n\n  const handleRefresh = () => {\n    setIsRetrying(true);\n    setTimeout(() => {\n      window.location.reload();\n    }, 500);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setGlitchText('Oops! Somet_ing wen_ w_ong');\n      setTimeout(() => setGlitchText('Oops! Something went wrong'), 100);\n    }, 3000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className={styles.errorTerminal}>\n      <div className={styles.scanline}></div>\n      <div className={styles.terminalHeader}>\n        <div className={styles.terminalButtonRed}></div>\n        <div className={styles.terminalButtonYellow}></div>\n        <div className={styles.terminalButtonGreen}></div>\n      </div>\n      <div className={styles.terminalBody}>\n        <pre className={styles.asciiArt}>\n          {`\n   /\\\\_/\\\\\n  ( o.o )\n   > ^ <\n          `}\n        </pre>\n        <h3 className={styles.errorGlitch} data-text={glitchText}>\n          {glitchText}\n        </h3>\n        <p className={styles.errorMessageTerm}>\n          <span className={styles.prompt}>&gt;</span> ERROR: {error}\n        </p>\n        <p className={styles.errorMessageTerm}>\n          <span className={styles.prompt}>&gt;</span> Press retry to reboot the system.\n        </p>\n        <div className={styles.errorActionsTerm}>\n          <button\n            className={`${styles.retryButtonTerm} ${isRetrying ? styles.retryingTerm : ''}`}\n            onClick={handleRefresh}\n            disabled={isRetrying}\n          >\n            {isRetrying ? 'REBOOTING...' : '[ RETRY ]'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"names":["Error","_ref","error","isRetrying","setIsRetrying","useState","glitchText","setGlitchText","useEffect","interval","setInterval","setTimeout","clearInterval","_jsxs","className","styles","children","_jsx","concat","onClick","handleRefresh","window","location","reload","disabled"],"sourceRoot":""}